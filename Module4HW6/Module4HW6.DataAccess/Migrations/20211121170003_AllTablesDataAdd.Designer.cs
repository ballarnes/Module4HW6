// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Module4HW6.DataAccess;

namespace Module4HW6.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20211121170003_AllTablesDataAdd")]
    partial class AllTablesDataAdd
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Module4HW6.DataAccess.Entities.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstagramURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAlive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Artist");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(1985, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "artist1@email.com",
                            InstagramURL = "https://www.instagram.com/artist1",
                            IsAlive = true,
                            Name = "Artist1",
                            Phone = "+11111111111"
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(1942, 6, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAlive = false,
                            Name = "Artist2"
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(1972, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "artist3@email.com",
                            InstagramURL = "https://www.instagram.com/artist3",
                            IsAlive = true,
                            Name = "Artist3",
                            Phone = "+33333333333"
                        },
                        new
                        {
                            Id = 4,
                            DateOfBirth = new DateTime(1934, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAlive = false,
                            Name = "Artist4"
                        },
                        new
                        {
                            Id = 5,
                            DateOfBirth = new DateTime(1992, 3, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "artist5@email.com",
                            InstagramURL = "https://www.instagram.com/artist5",
                            IsAlive = true,
                            Name = "Artist5",
                            Phone = "+55555555555"
                        },
                        new
                        {
                            Id = 6,
                            DateOfBirth = new DateTime(1990, 5, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "artist6@email.com",
                            InstagramURL = "https://www.instagram.com/artist6",
                            IsAlive = true,
                            Name = "Artist6",
                            Phone = "+66666666666"
                        });
                });

            modelBuilder.Entity("Module4HW6.DataAccess.Entities.ArtistSong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int>("SongId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.HasIndex("SongId");

                    b.ToTable("ArtistSong");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArtistId = 1,
                            SongId = 1
                        },
                        new
                        {
                            Id = 2,
                            ArtistId = 6,
                            SongId = 1
                        },
                        new
                        {
                            Id = 3,
                            ArtistId = 3,
                            SongId = 2
                        },
                        new
                        {
                            Id = 4,
                            ArtistId = 4,
                            SongId = 3
                        },
                        new
                        {
                            Id = 5,
                            ArtistId = 4,
                            SongId = 4
                        },
                        new
                        {
                            Id = 6,
                            ArtistId = 2,
                            SongId = 4
                        },
                        new
                        {
                            Id = 7,
                            ArtistId = 6,
                            SongId = 5
                        },
                        new
                        {
                            Id = 8,
                            ArtistId = 5,
                            SongId = 6
                        });
                });

            modelBuilder.Entity("Module4HW6.DataAccess.Entities.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genre");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Rock"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Pop"
                        },
                        new
                        {
                            Id = 3,
                            Title = "Rap"
                        },
                        new
                        {
                            Id = 4,
                            Title = "Blues"
                        },
                        new
                        {
                            Id = 5,
                            Title = "Dance"
                        });
                });

            modelBuilder.Entity("Module4HW6.DataAccess.Entities.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int?>("GenreId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleasedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Song");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Duration = 231,
                            GenreId = 5,
                            ReleasedDate = new DateTime(2007, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Song1"
                        },
                        new
                        {
                            Id = 2,
                            Duration = 161,
                            GenreId = 2,
                            ReleasedDate = new DateTime(2016, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Song2"
                        },
                        new
                        {
                            Id = 3,
                            Duration = 177,
                            GenreId = 4,
                            ReleasedDate = new DateTime(1950, 8, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Song3"
                        },
                        new
                        {
                            Id = 4,
                            Duration = 190,
                            ReleasedDate = new DateTime(1969, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Song4"
                        },
                        new
                        {
                            Id = 5,
                            Duration = 177,
                            GenreId = 3,
                            ReleasedDate = new DateTime(2017, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Song5"
                        },
                        new
                        {
                            Id = 6,
                            Duration = 180,
                            GenreId = 1,
                            ReleasedDate = new DateTime(2012, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Song6"
                        });
                });

            modelBuilder.Entity("Module4HW6.DataAccess.Entities.ArtistSong", b =>
                {
                    b.HasOne("Module4HW6.DataAccess.Entities.Artist", "Artist")
                        .WithMany("ArtistSong")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module4HW6.DataAccess.Entities.Song", "Song")
                        .WithMany("ArtistSong")
                        .HasForeignKey("SongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("Module4HW6.DataAccess.Entities.Song", b =>
                {
                    b.HasOne("Module4HW6.DataAccess.Entities.Genre", "Genre")
                        .WithMany("Songs")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Module4HW6.DataAccess.Entities.Artist", b =>
                {
                    b.Navigation("ArtistSong");
                });

            modelBuilder.Entity("Module4HW6.DataAccess.Entities.Genre", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("Module4HW6.DataAccess.Entities.Song", b =>
                {
                    b.Navigation("ArtistSong");
                });
#pragma warning restore 612, 618
        }
    }
}
